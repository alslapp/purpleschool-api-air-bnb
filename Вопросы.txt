Вопросы:

*. Между TelegramModule и приложением сделал слой NotifierModule, а TelegramModule по хорошему нужно выносить в микросервис.
Вопрос по транспорту: RMQ или кафка? в 2-х словах - принципиальная разница есть, когда что использовать?
кроме файловых микросервисов

*. сам sendMessage: добавил switch, для отправки сообщений в разные каналы, т.е при необходимости можно это расширить тут, и добавить соотв. шаблоны

*. при создании/отмене брони сообщение в телегу отправляю из Контроллера BookingController. Это правильный подход?

*. так же в сервисе BookingService добавил метод sendMessage, который вызвает в свою очередь сервис NotifierService.sendMessage
это правильный подход? Создал метод обертку для того, чтобо обогатить сообщение нужными данными. Соотв. для каждого модуля (где необходимо будет отправлять сообщения) будет подобный метод, чтобы добавлять в шаблон нужные данные.


*. Отправку уведомлений о новой брони разместил в контроллере, 
т.к. теоретически сервис бронирования можено вызывать из разных мест и не всегда может быть нужно отсылать уведомления.




*. Вопрос скорее по TS: Использовать Объекты/массивы вместо Enum,
т.к. Enum в рантайме генерят что то страшное и могут быть какие то непредсказуемые ошибки -
интересно узнать от опытного разработчика, Да/нет

const Roles = {
	ADMIN: 'ADMIN',
	// 	...
} as const

type RoleKeys - typeof Roles[keyof typeof Roles];
declare function hasAccess(role: RoleKeys): void;

3. nest zod используешь в боевых проектах давно?
то что nest zod написан не командой нест, в дальнейшем если плотно сесть на него, вдруг реп затормозится в развитии, придется слезать?
сам zod хорош!


Уточнения: 

1. т.е. ошибки в сервисе генерить нужно только нейтральный, т.е. new Error( CONST_TEXT_FOR_THIS_ERROR )
а в котроллере ловить эту ошибку try catch и уже решать, как отдавать, в зависимости от транспорта

2. Я реально заморочился с ZOD, прочитал весь readme в https://github.com/risen228/nestjs-zod. 

В чем преимущества nest zod: позволяет избавиться от: 
	- кучи пайпов, 
	- class-validator class-transformer
т.е. это про валидацию и трансформацию данных?
